import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QtQuick.VirtualKeyboard.Styles 2.13'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        prototype: "QQuickItem"
        name: "QtQuick.VirtualKeyboard.Styles/KeyIcon 1.0"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyIcon 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "source"; type: "QUrl" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtQuick.VirtualKeyboard.Styles/KeyIcon 2.0"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyIcon 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "source"; type: "QUrl" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtQuick.VirtualKeyboard.Styles/KeyPanel 2.0"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyPanel 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "control"; type: "QQuickItem"; isPointer: true }
        Property { name: "soundEffect"; type: "QUrl" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtQuick.VirtualKeyboard.Styles/KeyPanel 1.0"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyPanel 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "control"; type: "QQuickItem"; isPointer: true }
        Property { name: "soundEffect"; type: "QUrl" }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.VirtualKeyboard.Styles/KeyboardStyle 2.2"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyboardStyle 2.2"]
        exportMetaObjectRevisions: [2]
        isComposite: true
        Property { name: "keyboardHeight"; type: "double" }
        Property { name: "keyboardDesignWidth"; type: "double" }
        Property { name: "keyboardDesignHeight"; type: "double" }
        Property { name: "scaleHint"; type: "double"; isReadonly: true }
        Property { name: "keyboardRelativeLeftMargin"; type: "double" }
        Property { name: "keyboardRelativeRightMargin"; type: "double" }
        Property { name: "keyboardRelativeTopMargin"; type: "double" }
        Property { name: "keyboardRelativeBottomMargin"; type: "double" }
        Property { name: "keyboardBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "keyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "backspaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "enterKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "hideKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "shiftKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "symbolKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "modeKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "handwritingKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "characterPreviewMargin"; type: "double" }
        Property { name: "characterPreviewDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListItemWidth"; type: "double" }
        Property { name: "alternateKeysListItemHeight"; type: "double" }
        Property { name: "alternateKeysListTopMargin"; type: "double" }
        Property { name: "alternateKeysListBottomMargin"; type: "double" }
        Property { name: "alternateKeysListLeftMargin"; type: "double" }
        Property { name: "alternateKeysListRightMargin"; type: "double" }
        Property { name: "alternateKeysListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHeight"; type: "double" }
        Property { name: "selectionListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "navigationHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceInputKeyPanelDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceCanvasDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "popupListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languagePopupListEnabled"; type: "bool" }
        Property { name: "languageListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languageListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionHandle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputContainerBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputMargins"; type: "double" }
        Property { name: "fullScreenInputPadding"; type: "double" }
        Property { name: "fullScreenInputCursor"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputFont"; type: "QFont" }
        Property { name: "fullScreenInputPasswordCharacter"; type: "string" }
        Property { name: "fullScreenInputColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectionColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectedTextColor"; type: "QColor" }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.VirtualKeyboard.Styles/KeyboardStyle 1.1"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyboardStyle 1.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        Property { name: "keyboardHeight"; type: "double" }
        Property { name: "keyboardDesignWidth"; type: "double" }
        Property { name: "keyboardDesignHeight"; type: "double" }
        Property { name: "scaleHint"; type: "double"; isReadonly: true }
        Property { name: "keyboardRelativeLeftMargin"; type: "double" }
        Property { name: "keyboardRelativeRightMargin"; type: "double" }
        Property { name: "keyboardRelativeTopMargin"; type: "double" }
        Property { name: "keyboardRelativeBottomMargin"; type: "double" }
        Property { name: "keyboardBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "keyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "backspaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "enterKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "hideKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "shiftKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "symbolKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "modeKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "handwritingKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "characterPreviewMargin"; type: "double" }
        Property { name: "characterPreviewDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListItemWidth"; type: "double" }
        Property { name: "alternateKeysListItemHeight"; type: "double" }
        Property { name: "alternateKeysListTopMargin"; type: "double" }
        Property { name: "alternateKeysListBottomMargin"; type: "double" }
        Property { name: "alternateKeysListLeftMargin"; type: "double" }
        Property { name: "alternateKeysListRightMargin"; type: "double" }
        Property { name: "alternateKeysListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHeight"; type: "double" }
        Property { name: "selectionListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "navigationHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceInputKeyPanelDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceCanvasDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "popupListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languagePopupListEnabled"; type: "bool" }
        Property { name: "languageListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languageListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionHandle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputContainerBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputMargins"; type: "double" }
        Property { name: "fullScreenInputPadding"; type: "double" }
        Property { name: "fullScreenInputCursor"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputFont"; type: "QFont" }
        Property { name: "fullScreenInputPasswordCharacter"; type: "string" }
        Property { name: "fullScreenInputColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectionColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectedTextColor"; type: "QColor" }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.VirtualKeyboard.Styles/KeyboardStyle 2.1"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyboardStyle 2.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        Property { name: "keyboardHeight"; type: "double" }
        Property { name: "keyboardDesignWidth"; type: "double" }
        Property { name: "keyboardDesignHeight"; type: "double" }
        Property { name: "scaleHint"; type: "double"; isReadonly: true }
        Property { name: "keyboardRelativeLeftMargin"; type: "double" }
        Property { name: "keyboardRelativeRightMargin"; type: "double" }
        Property { name: "keyboardRelativeTopMargin"; type: "double" }
        Property { name: "keyboardRelativeBottomMargin"; type: "double" }
        Property { name: "keyboardBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "keyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "backspaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "enterKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "hideKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "shiftKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "symbolKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "modeKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "handwritingKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "characterPreviewMargin"; type: "double" }
        Property { name: "characterPreviewDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListItemWidth"; type: "double" }
        Property { name: "alternateKeysListItemHeight"; type: "double" }
        Property { name: "alternateKeysListTopMargin"; type: "double" }
        Property { name: "alternateKeysListBottomMargin"; type: "double" }
        Property { name: "alternateKeysListLeftMargin"; type: "double" }
        Property { name: "alternateKeysListRightMargin"; type: "double" }
        Property { name: "alternateKeysListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHeight"; type: "double" }
        Property { name: "selectionListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "navigationHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceInputKeyPanelDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceCanvasDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "popupListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languagePopupListEnabled"; type: "bool" }
        Property { name: "languageListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languageListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionHandle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputContainerBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputMargins"; type: "double" }
        Property { name: "fullScreenInputPadding"; type: "double" }
        Property { name: "fullScreenInputCursor"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputFont"; type: "QFont" }
        Property { name: "fullScreenInputPasswordCharacter"; type: "string" }
        Property { name: "fullScreenInputColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectionColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectedTextColor"; type: "QColor" }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.VirtualKeyboard.Styles/KeyboardStyle 2.0"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyboardStyle 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        Property { name: "keyboardHeight"; type: "double" }
        Property { name: "keyboardDesignWidth"; type: "double" }
        Property { name: "keyboardDesignHeight"; type: "double" }
        Property { name: "scaleHint"; type: "double"; isReadonly: true }
        Property { name: "keyboardRelativeLeftMargin"; type: "double" }
        Property { name: "keyboardRelativeRightMargin"; type: "double" }
        Property { name: "keyboardRelativeTopMargin"; type: "double" }
        Property { name: "keyboardRelativeBottomMargin"; type: "double" }
        Property { name: "keyboardBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "keyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "backspaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "enterKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "hideKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "shiftKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "symbolKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "modeKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "handwritingKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "characterPreviewMargin"; type: "double" }
        Property { name: "characterPreviewDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListItemWidth"; type: "double" }
        Property { name: "alternateKeysListItemHeight"; type: "double" }
        Property { name: "alternateKeysListTopMargin"; type: "double" }
        Property { name: "alternateKeysListBottomMargin"; type: "double" }
        Property { name: "alternateKeysListLeftMargin"; type: "double" }
        Property { name: "alternateKeysListRightMargin"; type: "double" }
        Property { name: "alternateKeysListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHeight"; type: "double" }
        Property { name: "selectionListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "navigationHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceInputKeyPanelDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceCanvasDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "popupListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languagePopupListEnabled"; type: "bool" }
        Property { name: "languageListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languageListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionHandle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputContainerBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputMargins"; type: "double" }
        Property { name: "fullScreenInputPadding"; type: "double" }
        Property { name: "fullScreenInputCursor"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputFont"; type: "QFont" }
        Property { name: "fullScreenInputPasswordCharacter"; type: "string" }
        Property { name: "fullScreenInputColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectionColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectedTextColor"; type: "QColor" }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.VirtualKeyboard.Styles/KeyboardStyle 1.3"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyboardStyle 1.3"]
        exportMetaObjectRevisions: [3]
        isComposite: true
        Property { name: "keyboardHeight"; type: "double" }
        Property { name: "keyboardDesignWidth"; type: "double" }
        Property { name: "keyboardDesignHeight"; type: "double" }
        Property { name: "scaleHint"; type: "double"; isReadonly: true }
        Property { name: "keyboardRelativeLeftMargin"; type: "double" }
        Property { name: "keyboardRelativeRightMargin"; type: "double" }
        Property { name: "keyboardRelativeTopMargin"; type: "double" }
        Property { name: "keyboardRelativeBottomMargin"; type: "double" }
        Property { name: "keyboardBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "keyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "backspaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "enterKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "hideKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "shiftKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "symbolKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "modeKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "handwritingKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "characterPreviewMargin"; type: "double" }
        Property { name: "characterPreviewDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListItemWidth"; type: "double" }
        Property { name: "alternateKeysListItemHeight"; type: "double" }
        Property { name: "alternateKeysListTopMargin"; type: "double" }
        Property { name: "alternateKeysListBottomMargin"; type: "double" }
        Property { name: "alternateKeysListLeftMargin"; type: "double" }
        Property { name: "alternateKeysListRightMargin"; type: "double" }
        Property { name: "alternateKeysListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHeight"; type: "double" }
        Property { name: "selectionListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "navigationHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceInputKeyPanelDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceCanvasDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "popupListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languagePopupListEnabled"; type: "bool" }
        Property { name: "languageListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languageListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionHandle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputContainerBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputMargins"; type: "double" }
        Property { name: "fullScreenInputPadding"; type: "double" }
        Property { name: "fullScreenInputCursor"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputFont"; type: "QFont" }
        Property { name: "fullScreenInputPasswordCharacter"; type: "string" }
        Property { name: "fullScreenInputColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectionColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectedTextColor"; type: "QColor" }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.VirtualKeyboard.Styles/KeyboardStyle 1.2"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyboardStyle 1.2"]
        exportMetaObjectRevisions: [2]
        isComposite: true
        Property { name: "keyboardHeight"; type: "double" }
        Property { name: "keyboardDesignWidth"; type: "double" }
        Property { name: "keyboardDesignHeight"; type: "double" }
        Property { name: "scaleHint"; type: "double"; isReadonly: true }
        Property { name: "keyboardRelativeLeftMargin"; type: "double" }
        Property { name: "keyboardRelativeRightMargin"; type: "double" }
        Property { name: "keyboardRelativeTopMargin"; type: "double" }
        Property { name: "keyboardRelativeBottomMargin"; type: "double" }
        Property { name: "keyboardBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "keyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "backspaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "enterKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "hideKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "shiftKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "symbolKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "modeKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "handwritingKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "characterPreviewMargin"; type: "double" }
        Property { name: "characterPreviewDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListItemWidth"; type: "double" }
        Property { name: "alternateKeysListItemHeight"; type: "double" }
        Property { name: "alternateKeysListTopMargin"; type: "double" }
        Property { name: "alternateKeysListBottomMargin"; type: "double" }
        Property { name: "alternateKeysListLeftMargin"; type: "double" }
        Property { name: "alternateKeysListRightMargin"; type: "double" }
        Property { name: "alternateKeysListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHeight"; type: "double" }
        Property { name: "selectionListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "navigationHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceInputKeyPanelDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceCanvasDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "popupListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languagePopupListEnabled"; type: "bool" }
        Property { name: "languageListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languageListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionHandle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputContainerBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputMargins"; type: "double" }
        Property { name: "fullScreenInputPadding"; type: "double" }
        Property { name: "fullScreenInputCursor"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputFont"; type: "QFont" }
        Property { name: "fullScreenInputPasswordCharacter"; type: "string" }
        Property { name: "fullScreenInputColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectionColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectedTextColor"; type: "QColor" }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.VirtualKeyboard.Styles/KeyboardStyle 1.0"
        exports: ["QtQuick.VirtualKeyboard.Styles/KeyboardStyle 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        Property { name: "keyboardHeight"; type: "double" }
        Property { name: "keyboardDesignWidth"; type: "double" }
        Property { name: "keyboardDesignHeight"; type: "double" }
        Property { name: "scaleHint"; type: "double"; isReadonly: true }
        Property { name: "keyboardRelativeLeftMargin"; type: "double" }
        Property { name: "keyboardRelativeRightMargin"; type: "double" }
        Property { name: "keyboardRelativeTopMargin"; type: "double" }
        Property { name: "keyboardRelativeBottomMargin"; type: "double" }
        Property { name: "keyboardBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "keyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "backspaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "enterKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "hideKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "shiftKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spaceKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "symbolKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "modeKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "handwritingKeyPanel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "characterPreviewMargin"; type: "double" }
        Property { name: "characterPreviewDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListItemWidth"; type: "double" }
        Property { name: "alternateKeysListItemHeight"; type: "double" }
        Property { name: "alternateKeysListTopMargin"; type: "double" }
        Property { name: "alternateKeysListBottomMargin"; type: "double" }
        Property { name: "alternateKeysListLeftMargin"; type: "double" }
        Property { name: "alternateKeysListRightMargin"; type: "double" }
        Property { name: "alternateKeysListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alternateKeysListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHeight"; type: "double" }
        Property { name: "selectionListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "selectionListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "navigationHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceInputKeyPanelDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "traceCanvasDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "popupListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languagePopupListEnabled"; type: "bool" }
        Property { name: "languageListDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListHighlight"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "languageListAdd"; type: "QQuickTransition"; isPointer: true }
        Property { name: "languageListRemove"; type: "QQuickTransition"; isPointer: true }
        Property { name: "selectionHandle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputContainerBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputBackground"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputMargins"; type: "double" }
        Property { name: "fullScreenInputPadding"; type: "double" }
        Property { name: "fullScreenInputCursor"; type: "QQmlComponent"; isPointer: true }
        Property { name: "fullScreenInputFont"; type: "QFont" }
        Property { name: "fullScreenInputPasswordCharacter"; type: "string" }
        Property { name: "fullScreenInputColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectionColor"; type: "QColor" }
        Property { name: "fullScreenInputSelectedTextColor"; type: "QColor" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtQuick.VirtualKeyboard.Styles/SelectionListItem 1.0"
        exports: ["QtQuick.VirtualKeyboard.Styles/SelectionListItem 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "soundEffect"; type: "QUrl" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtQuick.VirtualKeyboard.Styles/SelectionListItem 2.0"
        exports: ["QtQuick.VirtualKeyboard.Styles/SelectionListItem 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "soundEffect"; type: "QUrl" }
    }
    Component {
        prototype: "QQuickCanvasItem"
        name: "QtQuick.VirtualKeyboard.Styles/TraceCanvas 2.0"
        exports: ["QtQuick.VirtualKeyboard.Styles/TraceCanvas 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "trace"; type: "QVariant" }
        Property { name: "autoDestroy"; type: "bool" }
        Property { name: "autoDestroyDelay"; type: "int" }
        Property { name: "renderFunction"; type: "QVariant" }
        Property { name: "__renderPos"; type: "int" }
        Property { name: "__renderingEnabled"; type: "bool" }
        Method { name: "renderSmoothedLine"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtQuick.VirtualKeyboard.Styles/TraceInputKeyPanel 2.0"
        exports: ["QtQuick.VirtualKeyboard.Styles/TraceInputKeyPanel 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "control"; type: "QQuickItem"; isPointer: true }
        Property { name: "traceMargins"; type: "double" }
    }
}
