import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -dependencies dependencies.json QtQuick.Controls.Universal 2.13'

Module {
    dependencies: ["QtQuick.Controls 2.0"]
    Component { name: "QQuickAttachedObject"; prototype: "QObject" }
    Component {
        name: "QQuickUniversalBusyIndicator"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["QtQuick.Controls.Universal.impl/BusyIndicatorImpl 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int" }
        Property { name: "color"; type: "QColor" }
    }
    Component {
        name: "QQuickUniversalFocusRectangle"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        exports: ["QtQuick.Controls.Universal.impl/FocusRectangle 2.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QQuickUniversalProgressBar"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["QtQuick.Controls.Universal.impl/ProgressBarImpl 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "color"; type: "QColor" }
        Property { name: "progress"; type: "double" }
        Property { name: "indeterminate"; type: "bool" }
    }
    Component {
        name: "QQuickUniversalStyle"
        prototype: "QQuickAttachedObject"
        exports: ["QtQuick.Controls.Universal/Universal 2.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Theme"
            values: {
                "Light": 0,
                "Dark": 1,
                "System": 2
            }
        }
        Enum {
            name: "Color"
            values: {
                "Lime": 0,
                "Green": 1,
                "Emerald": 2,
                "Teal": 3,
                "Cyan": 4,
                "Cobalt": 5,
                "Indigo": 6,
                "Violet": 7,
                "Pink": 8,
                "Magenta": 9,
                "Crimson": 10,
                "Red": 11,
                "Orange": 12,
                "Amber": 13,
                "Yellow": 14,
                "Brown": 15,
                "Olive": 16,
                "Steel": 17,
                "Mauve": 18,
                "Taupe": 19
            }
        }
        Property { name: "theme"; type: "Theme" }
        Property { name: "accent"; type: "QVariant" }
        Property { name: "foreground"; type: "QVariant" }
        Property { name: "background"; type: "QVariant" }
        Property { name: "altHighColor"; type: "QColor"; isReadonly: true }
        Property { name: "altLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "altMediumColor"; type: "QColor"; isReadonly: true }
        Property { name: "altMediumHighColor"; type: "QColor"; isReadonly: true }
        Property { name: "altMediumLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "baseHighColor"; type: "QColor"; isReadonly: true }
        Property { name: "baseLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "baseMediumColor"; type: "QColor"; isReadonly: true }
        Property { name: "baseMediumHighColor"; type: "QColor"; isReadonly: true }
        Property { name: "baseMediumLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeAltLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeBlackHighColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeBlackLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeBlackMediumLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeBlackMediumColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeDisabledHighColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeDisabledLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeHighColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeMediumColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeMediumLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "chromeWhiteColor"; type: "QColor"; isReadonly: true }
        Property { name: "listLowColor"; type: "QColor"; isReadonly: true }
        Property { name: "listMediumColor"; type: "QColor"; isReadonly: true }
        Signal { name: "paletteChanged" }
        Method {
            name: "color"
            type: "QColor"
            Parameter { name: "color"; type: "Color" }
        }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "QtQuick.Controls.Universal.impl/CheckIndicator 2.0"
        exports: ["QtQuick.Controls.Universal.impl/CheckIndicator 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "control"; type: "QQuickItem"; isPointer: true }
        Property { name: "partiallyChecked"; type: "bool"; isReadonly: true }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "QtQuick.Controls.Universal.impl/RadioIndicator 2.0"
        exports: ["QtQuick.Controls.Universal.impl/RadioIndicator 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "control"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtQuick.Controls.Universal.impl/SwitchIndicator 2.0"
        exports: ["QtQuick.Controls.Universal.impl/SwitchIndicator 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "control"; type: "QQuickItem"; isPointer: true }
    }
}
